{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","key","id","className","Recipe","props","cookTime","servings","instructions","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","type","value","onChange","e","target","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","r","filter","i","undefined","htmlFor","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","createContext","sampleRecipes","App","useState","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3f0758b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Ingredient({ name, amount }) {\r\n    return (\r\n        <>\r\n            <span>{name}</span>\r\n            <span>{amount}</span>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Ingredient from \"./Ingredient\";\r\n\r\nexport default function IngredientList({ ingredients }) {\r\n  const ingredientElements = ingredients.map((ingredient) => {\r\n    return <Ingredient key={ingredient.id} {...ingredient} />;\r\n  });\r\n  return <div className=\"ingredient__grid\">{ingredientElements}</div>;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport IngrdientList from \"./IngredientList\";\r\n\r\nimport { RecipeContext } from \"./App\";\r\n\r\nexport default function Recipe(props) {\r\n  const { id, name, cookTime, servings, instructions, ingredients } = props;\r\n\r\n  const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext);\r\n  return (\r\n    <div className=\"recipe\">\r\n      <div className=\"recipe__header\">\r\n        <h3 className=\"recipe__title\">{name}</h3>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary mr-1\"\r\n            onClick={() => handleRecipeSelect(id)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => handleRecipeDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Cook Time:</span>\r\n        <span className=\"recipe__value\">{cookTime}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"recipe__label\">Servings:</span>\r\n        <span className=\"recipe__value\">{servings}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"recipe__label\">Instructions:</span>\r\n        <div className=\"recipe__value recipe__value--indented recipe__instructions\">\r\n          {instructions}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <span className=\"recipe__label\">Ingredients:</span>\r\n        <div className=\"recipe__value recipe__value--indented\">\r\n          <IngrdientList ingredients={ingredients} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nimport { RecipeContext } from \"./App\";\r\n\r\nexport default function RecipeList({ recipes }) {\r\n  const { handleRecipeAdd } = useContext(RecipeContext);\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <div>\r\n        {recipes.map((recipe) => {\r\n          return <Recipe key={recipe.id} {...recipe} />;\r\n        })}\r\n      </div>\r\n      <div className=\"recipe-list-add-recipe-btn-container\">\r\n        <button className=\"btn btn-primary\" onClick={handleRecipeAdd}>\r\n          Add Recipe\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RecipeIngredientEdit({\r\n  ingredient,\r\n  handleIngredientChange,\r\n  handleIngredientDelete,\r\n}) {\r\n  function handleChange(changes) {\r\n    handleIngredientChange(ingredient.id, { ...ingredient, ...changes });\r\n  }\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"recipe-edit__input\"\r\n        type=\"text\"\r\n        value={ingredient.name}\r\n        onChange={(e) => handleChange({ name: e.target.value })}\r\n      />\r\n      <input\r\n        className=\"recipe-edit__input\"\r\n        type=\"text\"\r\n        value={ingredient.amount}\r\n        onChange={(e) => handleChange({ amount: e.target.value })}\r\n      />\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        onClick={() => handleIngredientDelete(ingredient.id)}\r\n      >\r\n        &times;\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport RecipeIngredientEdit from \"./RecipeIngredientEdit\";\r\nimport { RecipeContext } from \"./App\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function RecipeEdit({ recipe }) {\r\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\r\n\r\n  function handleChange(changes) {\r\n    handleRecipeChange(recipe.id, { ...recipe, ...changes });\r\n  }\r\n\r\n  function handleIngredientChange(id, ingredient) {\r\n    const newIngredients = [...recipe.ingredients];\r\n    const index = newIngredients.findIndex((r) => r.id === id);\r\n    newIngredients[index] = ingredient;\r\n    handleChange({ ingredients: newIngredients });\r\n  }\r\n\r\n  function handleIngredientAdd() {\r\n    const newIngredient = {\r\n      id: uuidv4(),\r\n      name: \"\",\r\n      amount: \"\",\r\n    };\r\n    handleChange({ ingredients: [...recipe.ingredients, newIngredient] });\r\n  }\r\n\r\n  function handleIngredientDelete(id) {\r\n    handleChange({\r\n      ingredients: recipe.ingredients.filter((i) => i.id !== id),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipe-edit\">\r\n      <div className=\"recipe-edit__remove-button-container\">\r\n        <button\r\n          className=\"btn recipe-edit__remove-button\"\r\n          onClick={() => handleRecipeSelect(undefined)}\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n      <div className=\"recipe-edit__details-grid\">\r\n        <label className=\"recipe-edit__label\" htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          className=\"recipe-edit__input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={recipe.name}\r\n          onChange={(e) => handleChange({ name: e.target.value })}\r\n        />\r\n\r\n        <label className=\"recipe-edit__label\" htmlFor=\"cookTIme\">\r\n          Cook Time\r\n        </label>\r\n        <input\r\n          className=\"recipe-edit__input\"\r\n          type=\"text\"\r\n          name=\"cookTime\"\r\n          id=\"cookTime\"\r\n          value={recipe.cookTime}\r\n          onChange={(e) => handleChange({ cookTime: e.target.value })}\r\n        />\r\n\r\n        <label className=\"recipe-edit__label\" htmlFor=\"servings\">\r\n          Servings\r\n        </label>\r\n        <input\r\n          className=\"recipe-edit__input\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          name=\"servings\"\r\n          id=\"servings\"\r\n          value={recipe.servings}\r\n          onChange={(e) =>\r\n            handleChange({ servings: parseInt(e.target.value) || \"\" })\r\n          }\r\n        />\r\n\r\n        <label className=\"recipe-edit__label\" htmlFor=\"instructions\">\r\n          Instructions\r\n        </label>\r\n        <textarea\r\n          name=\"instructions\"\r\n          id=\"instructions\"\r\n          className=\"recipe-edit__input\"\r\n          value={recipe.instructions}\r\n          onChange={(e) => handleChange({ instructions: e.target.value })}\r\n        />\r\n      </div>\r\n      <br />\r\n      <label className=\"recipe-edit__label\">Ingredients</label>\r\n      <div className=\"recipe-edit__ingredient-grid\">\r\n        <div>Name</div>\r\n        <div>Amount</div>\r\n        <div></div>\r\n        {recipe.ingredients.map((ingredient) => (\r\n          <RecipeIngredientEdit\r\n            key={ingredient.id}\r\n            ingredient={ingredient}\r\n            handleIngredientChange={handleIngredientChange}\r\n            handleIngredientDelete={handleIngredientDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleIngredientAdd()}\r\n        >\r\n          {\" \"}\r\n          Add Ingredient\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, createContext, useEffect } from \"react\";\r\nimport RecipeList from \"./RecipeList\";\r\nimport RecipeEdit from \"./RecipeEdit\";\r\nimport \"../css/App.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const RecipeContext = createContext();\r\nconst LOCAL_STORAGE_KEY = \"cookingWithReact.recipes\";\r\n\r\nfunction App() {\r\n  const [recipes, setRecipes] = useState(sampleRecipes);\r\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\r\n  const selectedRecipe = recipes.find(\r\n    (recipe) => recipe.id === selectedRecipeId\r\n  );\r\n\r\n  useEffect(() => {\r\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    if (recipeJSON !== null) setRecipes(JSON.parse(recipeJSON));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\r\n  }, [recipes]);\r\n\r\n  const recipeContextValue = {\r\n    handleRecipeAdd: handleRecipeAdd,\r\n    handleRecipeDelete: handleRecipeDelete,\r\n    handleRecipeSelect: handleRecipeSelect,\r\n    handleRecipeChange: handleRecipeChange,\r\n  };\r\n\r\n  function handleRecipeChange(id, recipe) {\r\n    const newRecipes = [...recipes];\r\n    const index = newRecipes.findIndex((r) => r.id === id);\r\n    newRecipes[index] = recipe;\r\n    setRecipes(newRecipes);\r\n  }\r\n  function handleRecipeSelect(id) {\r\n    setSelectedRecipeId(id);\r\n  }\r\n\r\n  function handleRecipeAdd() {\r\n    const newRecipe = {\r\n      id: uuidv4(),\r\n      name: \"\",\r\n      servings: \"\",\r\n      cookTime: \"\",\r\n      instructions: \"\",\r\n      ingredients: [{ id: uuidv4(), name: \"\", amount: \"\" }],\r\n    };\r\n\r\n    setRecipes([...recipes, newRecipe]);\r\n    setSelectedRecipeId(newRecipe.id);\r\n  }\r\n\r\n  function handleRecipeDelete(id) {\r\n    if (selectedRecipeId !== null && selectedRecipeId === id) {\r\n      setSelectedRecipeId(undefined);\r\n    }\r\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\r\n  }\r\n\r\n  return (\r\n    <RecipeContext.Provider value={recipeContextValue}>\r\n      <RecipeList recipes={recipes} />\r\n      {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\r\n    </RecipeContext.Provider>\r\n  );\r\n}\r\n\r\nconst sampleRecipes = [\r\n  {\r\n    id: 1,\r\n    name: \"Plain Chiken\",\r\n    servings: 3,\r\n    cookTime: \"1:45\",\r\n    instructions:\r\n      \"1. Put salt on Chicken\\n2. Put Chicken in oven\\n3. Eat Chicken\",\r\n    ingredients: [\r\n      {\r\n        id: 1,\r\n        name: \"Chicken\",\r\n        amount: \"2 lbs\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Salt\",\r\n        amount: \"1 Tbs\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Plain Fish\",\r\n    servings: 2,\r\n    cookTime: \"2:00\",\r\n    instructions: \"1. Put salt on Fish\\n2. Put Fish in oven\\n3. Eat Fish\",\r\n    ingredients: [\r\n      {\r\n        id: 1,\r\n        name: \"Fish\",\r\n        amount: \"2 lbs\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Salt\",\r\n        amount: \"1 Tbs\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}